server:
  port: 7001
eureka:
  client:
    register-with-eureka: false # 避免把自己注册进去
    fetch-registry: false # 避免把自己注册进去
    service-url:
      #      defaultZone: http://locahost:7001/eureka
      #      defaultZone: http://user:123@localhost:7001/eureka
      # defaultZone: http://user:123@eureka-2:7002/eureka,http://user:123@eureka-3:7003/eureka
      defaultZone: http://user:123@192.168.1.100:7002/eureka,http://user:123@192.168.1.100:7003/eureka  # http:.../eureka 最后的eureka是给客户端client端看的，浏览器测试的时候不需要
    #defaultZone: http://user:123@192.168.25.141:7002/eureka,http://user:123@192.168.25.141:7003/eureka  #docker
      # 为了能让eureka-server 接受到服务变更信息后，更快速地把服务列表的信息进行更改同步(多台发现服务的服务器之间会复制服务列表，
      # 进行更新)
    instance-info-replication-interval-seconds: 10
  instance:
    hostname: eureka-1
  server:
    enable-self-preservation: true #是否开启自我保护机制：true表示开启 ；false表示关闭；
#    eviction-interval-timer-in-ms: 2000 #清理注册表的间隔时间2s，单位毫秒
security:
  basic:
    enabled: true  # 开启安全配置，如果不需要设置，设置为false，注意这个参数必须放在application.yml中，不能放到bootstrap.yml中
  user:
    name: user
    password: 123   # 在配置了用户名和密码后，可以把访问地址(eureka.client.service-url.defaultZone)修改为curl风格，这样eureka 客户端访问当前注册中心就必须通过用户名和密码登录了，否则不能连接到注册中心
spring:
  application:
    name: eureka-high
  profiles: e1
#    active: e1